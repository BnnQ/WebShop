// <auto-generated />
using System;
using Homework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Homework.Migrations.LocalDatabase
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Homework.Data.Entities.BannerImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AssociatedProductId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("AssociatedProductId");

                    b.ToTable("Banners");

                    b.HasCheckConstraint("CK_Banners_FilePath", "[FilePath] != ''");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "/media/Images/Banners/banner1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            FilePath = "/media/Images/Banners/banner2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            FilePath = "/media/Images/Banners/banner3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            FilePath = "/media/Images/Banners/banner4.jpg"
                        },
                        new
                        {
                            Id = 5,
                            FilePath = "/media/Images/Banners/banner5.jpg"
                        });
                });

            modelBuilder.Entity("Homework.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");

                    b.HasCheckConstraint("CK_Categories_Name", "[Name] != ''");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Smartphones",
                            UnitName = "Smartphone"
                        });
                });

            modelBuilder.Entity("Homework.Data.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasCheckConstraint("CK_Manufacturers_Name", "[Name] != ''");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            Name = "TECNO"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Blackview"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 5,
                            Name = "OnePlus"
                        },
                        new
                        {
                            Id = 6,
                            Name = "TCL"
                        });
                });

            modelBuilder.Entity("Homework.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnOrder(5);

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("money")
                        .HasColumnOrder(4);

                    b.Property<int>("Rating")
                        .HasColumnType("int")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasCheckConstraint("CK_Products_Title", "[Title] != ''");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Count = 50,
                            ManufacturerId = 1,
                            Price = 11999m,
                            Rating = 5,
                            Title = "Galaxy A33 5G 6/128Gb Black"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Count = 100,
                            ManufacturerId = 2,
                            Price = 6999m,
                            Rating = 3,
                            Title = "POVA-2 4/128Gb Dazzle Black"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Count = 75,
                            ManufacturerId = 1,
                            Price = 8999m,
                            Rating = 4,
                            Title = "Galaxy A23 6/128Gb LTE Black"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Count = 100,
                            ManufacturerId = 3,
                            Price = 4799m,
                            Rating = 3,
                            Title = "BV5900 3/32GB DS Orange"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Count = 100,
                            ManufacturerId = 4,
                            Price = 22499m,
                            Rating = 5,
                            Title = "iPhone 11 64GB White"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Count = 150,
                            ManufacturerId = 5,
                            Price = 13999m,
                            Rating = 4,
                            Title = "Nord AC2003 8/128Gb Gray Onyx"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Count = 200,
                            ManufacturerId = 2,
                            Price = 2399m,
                            Rating = 2,
                            Title = "POP 2F 1/16GB Dawn Blue"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Count = 50,
                            ManufacturerId = 1,
                            Price = 33499m,
                            Rating = 5,
                            Title = "Galaxy S22 8/128 Green"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Count = 75,
                            ManufacturerId = 6,
                            Price = 7599m,
                            Rating = 3,
                            Title = "20L 4/128Gb Eclipse Black"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Count = 100,
                            ManufacturerId = 1,
                            Price = 4099m,
                            Rating = 2,
                            Title = "Galaxy A03 Core Ceramic Black"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Count = 5,
                            ManufacturerId = 1,
                            Price = 15999m,
                            Rating = 4,
                            Title = "Galaxy A53 5G 6/128Gb White"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            Count = 0,
                            ManufacturerId = 4,
                            Price = 36999m,
                            Rating = 5,
                            Title = "iPhone 14 128GB Midnight"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            Count = 1,
                            ManufacturerId = 4,
                            Price = 54999m,
                            Rating = 5,
                            Title = "iPhone 14 Pro Max 128GB Deep Purple"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            Count = 145,
                            ManufacturerId = 2,
                            Price = 3799m,
                            Rating = 2,
                            Title = "Spark Go 2022 2/32Gb NFC 2SIM Ice Silver"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            Count = 100,
                            ManufacturerId = 1,
                            Price = 4555m,
                            Rating = 2,
                            Title = "Galaxy A04 3/32Gb Copper"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 1,
                            Count = 50,
                            ManufacturerId = 2,
                            Price = 11999m,
                            Rating = 5,
                            Title = "POVA NEO-2 4/64Gb Cyber Blue"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            Count = 120,
                            ManufacturerId = 3,
                            Price = 5999m,
                            Rating = 2,
                            Title = "BV4900 3/32GB Green"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 1,
                            Count = 75,
                            ManufacturerId = 2,
                            Price = 3999m,
                            Rating = 2,
                            Title = "POP 6 Pro 2/32Gb Polar Black"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 1,
                            Count = 150,
                            ManufacturerId = 3,
                            Price = 3799m,
                            Rating = 2,
                            Title = "A55 3/16Gb Summer Mojito"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 1,
                            Count = 30,
                            ManufacturerId = 2,
                            Price = 3499m,
                            Rating = 2,
                            Title = "POP 5 LTE 2/32Gb Deepsea Luster"
                        });
                });

            modelBuilder.Entity("Homework.Data.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("/media/Images/stub.jpg")
                        .HasColumnOrder(2);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasCheckConstraint("CK_ProductImages_FilePath", "[FilePath] != ''");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FilePath = "/media/Images/Product/1_product-image-1.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            FilePath = "/media/Images/Product/1_product-image-2.jpg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            FilePath = "/media/Images/Product/2_product-image-1.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 4,
                            FilePath = "/media/Images/Product/2_product-image-2.jpg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            FilePath = "/media/Images/Product/3_product-image-1.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 6,
                            FilePath = "/media/Images/Product/3_product-image-2.jpg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 7,
                            FilePath = "/media/Images/Product/4_product-image-1.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 8,
                            FilePath = "/media/Images/Product/4_product-image-2.jpg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 9,
                            FilePath = "/media/Images/Product/5_product-image-1.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 10,
                            FilePath = "/media/Images/Product/5_product-image-2.jpg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 11,
                            FilePath = "/media/Images/Product/6_product-image-1.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 12,
                            FilePath = "/media/Images/Product/6_product-image-2.jpg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 13,
                            FilePath = "/media/Images/Product/7_product-image-1.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 14,
                            FilePath = "/media/Images/Product/7_product-image-2.jpg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 15,
                            FilePath = "/media/Images/Product/8_product-image-1.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 16,
                            FilePath = "/media/Images/Product/8_product-image-2.jpg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 17,
                            FilePath = "/media/Images/Product/9_product-image-1.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 18,
                            FilePath = "/media/Images/Product/9_product-image-2.jpg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 19,
                            FilePath = "/media/Images/Product/10_product-image-1.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 20,
                            FilePath = "/media/Images/Product/10_product-image-2.jpg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 21,
                            FilePath = "/media/Images/Product/11_product-image-1.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 22,
                            FilePath = "/media/Images/Product/11_product-image-2.jpg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 23,
                            FilePath = "/media/Images/Product/12_product-image-1.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 24,
                            FilePath = "/media/Images/Product/12_product-image-2.jpg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 25,
                            FilePath = "/media/Images/Product/13_product-image-1.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 26,
                            FilePath = "/media/Images/Product/13_product-image-2.jpg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 27,
                            FilePath = "/media/Images/Product/14_product-image-1.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 28,
                            FilePath = "/media/Images/Product/14_product-image-2.jpg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 29,
                            FilePath = "/media/Images/Product/15_product-image-1.jpg",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 30,
                            FilePath = "/media/Images/Product/15_product-image-2.jpg",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 31,
                            FilePath = "/media/Images/Product/16_product-image-1.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 32,
                            FilePath = "/media/Images/Product/16_product-image-2.jpg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 33,
                            FilePath = "/media/Images/Product/17_product-image-1.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 34,
                            FilePath = "/media/Images/Product/17_product-image-2.jpg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 35,
                            FilePath = "/media/Images/Product/18_product-image-1.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 36,
                            FilePath = "/media/Images/Product/18_product-image-2.jpg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 37,
                            FilePath = "/media/Images/Product/19_product-image-1.jpg",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 38,
                            FilePath = "/media/Images/Product/19_product-image-2.jpg",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 39,
                            FilePath = "/media/Images/Product/20_product-image-1.jpg",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 40,
                            FilePath = "/media/Images/Product/20_product-image-2.jpg",
                            ProductId = 20
                        });
                });

            modelBuilder.Entity("Homework.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("YearOfBirth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b74ddd14-6340-4840-95c2-db12554843e5",
                            AccessFailedCount = 0,
                            Balance = 0.0,
                            ConcurrencyStamp = "b654e375-2a69-48f8-bf14-a77a2baed553",
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@GMAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAECNjWwHJZq65ZaclLKnMelKbVlqfrMNM7b74TzmWlnbH84KveiYmAhhB/aDCkLTdrA==",
                            PhoneNumber = "+380687507133",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8fd48d4a-9fb9-4f24-b33b-90ee8b9f8007",
                            TwoFactorEnabled = false,
                            UserName = "admin",
                            YearOfBirth = 0
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ConcurrencyStamp = "2",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "b74ddd14-6340-4840-95c2-db12554843e5",
                            RoleId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Homework.Data.Entities.BannerImage", b =>
                {
                    b.HasOne("Homework.Data.Entities.Product", "AssociatedProduct")
                        .WithMany("AssociatedBanners")
                        .HasForeignKey("AssociatedProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("AssociatedProduct");
                });

            modelBuilder.Entity("Homework.Data.Entities.Category", b =>
                {
                    b.HasOne("Homework.Data.Entities.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("Homework.Data.Entities.Product", b =>
                {
                    b.HasOne("Homework.Data.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homework.Data.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Homework.Data.Entities.ProductImage", b =>
                {
                    b.HasOne("Homework.Data.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Homework.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Homework.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Homework.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Homework.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Homework.Data.Entities.Category", b =>
                {
                    b.Navigation("ChildCategories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Homework.Data.Entities.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Homework.Data.Entities.Product", b =>
                {
                    b.Navigation("AssociatedBanners");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
